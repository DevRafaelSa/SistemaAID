# Generated by Django 4.0.5 on 2022-07-06 05:22

import cadastros.models
from django.db import migrations, models
import django.db.models.deletion
import valida_cpf_cnpj.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Componente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=50)),
                ('descricao', models.TextField(max_length=500, verbose_name='Detalhes dos componentes:')),
            ],
        ),
        migrations.CreateModel(
            name='Donatario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('data_nasc', models.DateField(verbose_name='Data de nascimento')),
                ('email', models.EmailField(error_messages={'unique': 'O e-mail informado já existe.'}, max_length=50, unique=True)),
                ('cpf', valida_cpf_cnpj.fields.CPFField(error_messages={'unique': 'O CPF informado já existe.'}, max_length=14, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(error_messages={'unique': 'O RG informado já existe.'}, max_length=20, unique=True, validators=[cadastros.models.validar_rg], verbose_name='RG')),
                ('emissor', models.CharField(max_length=10, verbose_name='Órgão emissor')),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
                ('nacion', models.CharField(max_length=20, verbose_name='Nacionalidade')),
                ('sexo', models.CharField(choices=[('N/A', 'Prefiro não opinar'), ('F', 'Feminino'), ('M', 'Masculino')], default=('N/A', 'Prefiro não opinar'), max_length=3, verbose_name='Sexo')),
                ('estado_civil', models.CharField(choices=[('solteiro', 'Solteiro(a)'), ('casado', 'Casado(a)'), ('divorciado', 'Divorciado(a)'), ('separado', 'Separado(a)'), ('viuvo', 'Viúvo(a)')], default=('solteiro', 'Solteiro(a)'), max_length=10, verbose_name='Estado Civil')),
                ('end', models.CharField(max_length=50, verbose_name='Endereço')),
                ('numero', models.CharField(max_length=6, verbose_name='Nº')),
                ('complemento', models.CharField(blank=True, max_length=50, verbose_name='Complemento')),
                ('cidade', models.CharField(max_length=25, verbose_name='Cidade')),
                ('bairro', models.CharField(max_length=25, verbose_name='Bairro')),
                ('cep', models.CharField(max_length=8, validators=[cadastros.models.validar_cep], verbose_name='CEP')),
                ('tel', models.CharField(max_length=11, validators=[cadastros.models.validar_tel], verbose_name='Telefone')),
                ('estudante', models.CharField(choices=[('sim', 'Sim'), ('nao', 'Não')], default='sim', max_length=3, verbose_name='Estudante?')),
                ('estuda_unipe', models.BooleanField(verbose_name='Estudante Unipê?')),
                ('curso_unipe', models.CharField(blank=True, max_length=50, verbose_name='Curso')),
                ('trabalhador', models.BooleanField(verbose_name='Trabalha?')),
                ('local_trabalho', models.CharField(blank=True, max_length=50, verbose_name='Local trabalho')),
                ('is_funcionario_unipe', models.BooleanField(verbose_name='Funcionário Unipê?')),
                ('qtd_pessoas_familia', models.CharField(choices=[('1', 'Uma'), ('2', 'Duas'), ('3', 'Três'), ('4', 'Quatro'), ('5', 'Cinco'), ('6', 'Seis'), ('7', 'Sete'), ('8', 'Oito'), ('9', 'Nove'), ('10', 'Dez')], default=('1', 'Uma'), max_length=7, verbose_name='Tamanho da família')),
                ('qtd_filhos', models.CharField(choices=[('0', 'Nenhum'), ('1', 'Um'), ('2', 'Dois'), ('3', 'Três'), ('4', 'Quatro ou mais')], default=('0', 'Nenhum'), max_length=1, verbose_name='Quantos filhos?')),
                ('renda', models.CharField(choices=[('renda1', 'Menos de R$ 1045'), ('renda2', 'De R$ 1045 até R$ 2090'), ('renda3', 'Acima de R$ 2090')], default=('renda1', 'Menos de R$ 1045'), max_length=7, verbose_name='Renda familiar')),
                ('indica_unipe', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default=('5', '5'), max_length=1, verbose_name='O quanto você indicaria o AID para um conhecido?')),
                ('recebeu_doacao', models.BooleanField(default=False, verbose_name='Recebeu doação?')),
            ],
            options={
                'verbose_name': 'Donatário',
                'verbose_name_plural': 'Donatários',
            },
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=50)),
                ('descricao', models.TextField(max_length=500, verbose_name='Detalhes do equipamento:')),
            ],
        ),
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(error_messages={'unique': 'Já existe uma Equipe com este nome.'}, max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ferramenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=50)),
                ('descricao', models.TextField(max_length=500, verbose_name='Detalhes da ferramenta:')),
            ],
        ),
        migrations.CreateModel(
            name='Mobiliario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=50)),
                ('descricao', models.TextField(max_length=500, verbose_name='Detalhes da mobiliaria:')),
            ],
            options={
                'verbose_name': 'Mobiliário',
            },
        ),
        migrations.CreateModel(
            name='Parceiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pjuridica', models.BooleanField(default=False, verbose_name='Pessoa Jurídica')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome/Razão Social')),
                ('cpf', valida_cpf_cnpj.fields.CPFField(blank=True, error_messages={'unique': 'O CPF informado já existe.'}, max_length=14, null=True, verbose_name='CPF')),
                ('cnpj', valida_cpf_cnpj.fields.CNPJField(blank=True, error_messages={'unique': 'O CNPJ informado já existe.'}, max_length=18, null=True, verbose_name='CNPJ')),
                ('resp', models.CharField(blank=True, max_length=50, verbose_name='Responsável')),
                ('end', models.CharField(max_length=50, verbose_name='Endereço')),
                ('num', models.CharField(max_length=50, verbose_name='Nº')),
                ('comp', models.CharField(blank=True, max_length=50, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=50)),
                ('cidade', models.CharField(max_length=100)),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
                ('tel', models.CharField(max_length=11, validators=[cadastros.models.validar_tel], verbose_name='Telefone')),
            ],
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('nome', models.CharField(max_length=50)),
                ('email', models.EmailField(error_messages={'unique': 'O e-mail informado já existe.'}, max_length=254, unique=True)),
                ('cpf', valida_cpf_cnpj.fields.CPFField(error_messages={'unique': 'O CPF informado já existe.'}, max_length=14, unique=True, verbose_name='CPF')),
                ('rgm', models.CharField(default=None, error_messages={'unique': 'O RGM informado já existe.'}, max_length=50, primary_key=True, serialize=False, unique=True, validators=[cadastros.models.validar_rgm])),
                ('nivelexp', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=1)),
                ('txtexp', models.TextField(blank=True, max_length=500, verbose_name='Seu conhecimento sobre a área escolhida')),
                ('estagiario', models.BooleanField(default=False, verbose_name='Estagiário')),
                ('monitor', models.BooleanField(default=False, verbose_name='Monitor')),
                ('seg', models.BooleanField(verbose_name='Segunda-feira')),
                ('ter', models.BooleanField(verbose_name='Terça-feira')),
                ('qua', models.BooleanField(verbose_name='Quarta-feira')),
                ('qui', models.BooleanField(verbose_name='Quinta-feira')),
                ('sex', models.BooleanField(verbose_name='Sexta-feira')),
                ('sab', models.BooleanField(verbose_name='Sábado')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('equipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pessoas', to='cadastros.equipe', verbose_name='Equipe de Trabalho')),
            ],
        ),
        migrations.CreateModel(
            name='DoacaoParceiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(max_length=512)),
                ('data_doacao', models.DateField(auto_now_add=True)),
                ('parceiro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doacoes', to='cadastros.parceiro')),
            ],
            options={
                'verbose_name': 'Doação de Parceiro',
                'verbose_name_plural': 'Doações de Parceiros',
            },
        ),
        migrations.CreateModel(
            name='DoacaoDonatario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(max_length=512)),
                ('data_doacao', models.DateField(auto_now_add=True)),
                ('donatario', models.ForeignKey(limit_choices_to={'recebeu_doacao': False}, on_delete=django.db.models.deletion.CASCADE, related_name='doacoes', to='cadastros.donatario')),
            ],
            options={
                'verbose_name': 'Doação para Donatário',
                'verbose_name_plural': 'Doações para Donatários',
            },
        ),
    ]
